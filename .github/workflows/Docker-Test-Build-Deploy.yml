# This is a basic workflow to help you get started with Actions

name: Docker-Test-Build-Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    runs-on: ubuntu-latest
    container: 
      image: cypress/browsers:node16.5.0-chrome94-ff93
      options: --user 1001  # ← THIS IS THE IMPORTANT LINE!
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Set Github API token in .env
        run: |
          echo "GITHUB_AUTH_TOKEN=${{ secrets.VIEW_REPOS_TOKEN }}" > .env
      
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          command: npm run e2e:headless
          build: npm run build

  build:
    needs: test

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build Docker Image and Push (deploy it!)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ github.actor }}/personal-website:prod
          build-args: GITHUB=${{ secrets.VIEW_REPOS_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
